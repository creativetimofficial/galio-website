"use strict";(self.webpackChunkgalio=self.webpackChunkgalio||[]).push([[651],{1612:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"get-started/modern-usage","title":"Patrones de Uso Modernos","description":"Framework React Native Gratuito y de C\xf3digo Abierto","source":"@site/i18n/es/docusaurus-plugin-content-docs/current/get-started/modern-usage.mdx","sourceDirName":"get-started","slug":"/get-started/modern-usage","permalink":"/es/docs/get-started/modern-usage","draft":false,"unlisted":false,"editUrl":"https://github.com/galio-org/galio-org.github.io/tree/main/docs/get-started/modern-usage.mdx","tags":[],"version":"current","frontMatter":{"title":"Patrones de Uso Modernos","description":"Framework React Native Gratuito y de C\xf3digo Abierto","keywords":["Patrones de Uso Modernos","Patrones de Uso Modernos \u2013 Documentaci\xf3n"],"source_url":"/docs/get-started/modern-usage"},"sidebar":"tutorialSidebar","previous":{"title":"GalioTheme","permalink":"/es/docs/get-started/galio-theme"},"next":{"title":"Galio Components","permalink":"/es/docs/components"}}');var s=n(4848),r=n(8453);const a={title:"Patrones de Uso Modernos",description:"Framework React Native Gratuito y de C\xf3digo Abierto",keywords:["Patrones de Uso Modernos","Patrones de Uso Modernos \u2013 Documentaci\xf3n"],source_url:"/docs/get-started/modern-usage"},i=void 0,c={},d=[{value:"Patrones de Uso Modernos",id:"patrones-de-uso-modernos",level:2},{value:"Soporte para TypeScript",id:"soporte-para-typescript",level:3},{value:"Uso B\xe1sico de TypeScript",id:"uso-b\xe1sico-de-typescript",level:4},{value:"Patrones Modernos de React",id:"patrones-modernos-de-react",level:3},{value:"Componentes Funcionales con Hooks",id:"componentes-funcionales-con-hooks",level:4},{value:"Mejores Pr\xe1cticas",id:"mejores-pr\xe1cticas",level:3}];function l(e){const o={code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o.h2,{id:"patrones-de-uso-modernos",children:"Patrones de Uso Modernos"}),"\n",(0,s.jsx)(o.p,{children:"Esta gu\xeda cubre patrones de uso modernos de Galio, soporte para TypeScript y mejores pr\xe1cticas."}),"\n",(0,s.jsx)(o.h3,{id:"soporte-para-typescript",children:"Soporte para TypeScript"}),"\n",(0,s.jsx)(o.p,{children:"Galio proporciona soporte completo para TypeScript con definiciones de tipos apropiadas."}),"\n",(0,s.jsx)(o.h4,{id:"uso-b\xe1sico-de-typescript",children:"Uso B\xe1sico de TypeScript"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-tsx",children:"import React, { useState } from 'react';\nimport { Button, Input, Block, Text } from 'galio-framework';\n\ninterface UserFormProps {\n  onSubmit: (data: UserData) => void;\n}\n\nconst UserForm: React.FC<UserFormProps> = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n\n  return (\n    <Block flex padding={20}>\n      <Input\n        placeholder=\"Nombre\"\n        value={name}\n        onChangeText={setName}\n        color=\"primary\"\n        rounded\n      />\n      <Button color=\"primary\" onPress={() => onSubmit({ name, email })}>\n        Enviar\n      </Button>\n    </Block>\n  );\n};\n"})}),"\n",(0,s.jsx)(o.h3,{id:"patrones-modernos-de-react",children:"Patrones Modernos de React"}),"\n",(0,s.jsx)(o.h4,{id:"componentes-funcionales-con-hooks",children:"Componentes Funcionales con Hooks"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-tsx",children:'import React, { useState, useEffect } from \'react\';\nimport { Block, Text, Button, Toast } from \'galio-framework\';\n\nconst Counter: React.FC = () => {\n  const [count, setCount] = useState(0);\n  const [showToast, setShowToast] = useState(false);\n\n  useEffect(() => {\n    if (count > 10) {\n      setShowToast(true);\n      setTimeout(() => setShowToast(false), 3000);\n    }\n  }, [count]);\n\n  return (\n    <Block flex center middle>\n      <Text h1>{count}</Text>\n      <Block row space="around">\n        <Button color="error" onPress={() => setCount(prev => prev - 1)}>\n          Disminuir\n        </Button>\n        <Button color="success" onPress={() => setCount(prev => prev + 1)}>\n          Aumentar\n        </Button>\n      </Block>\n    </Block>\n  );\n};\n'})}),"\n",(0,s.jsx)(o.h3,{id:"mejores-pr\xe1cticas",children:"Mejores Pr\xe1cticas"}),"\n",(0,s.jsxs)(o.ol,{children:["\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.strong,{children:"Usa TypeScript"})," para mejor seguridad de tipos"]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.strong,{children:"Prefiere componentes funcionales"})," con hooks"]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.strong,{children:"Usa tipos de props apropiados"})," e interfaces"]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.strong,{children:"Sigue patrones de composici\xf3n"})," de componentes"]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.strong,{children:"Usa constantes del tema"})," consistentemente"]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.strong,{children:"Implementa estados de carga"})," apropiados"]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.strong,{children:"Prueba tus componentes"})," exhaustivamente"]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.strong,{children:"Optimiza para el rendimiento"})," cuando sea necesario"]}),"\n"]})]})}function p(e={}){const{wrapper:o}={...(0,r.R)(),...e.components};return o?(0,s.jsx)(o,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,o,n)=>{n.d(o,{R:()=>a,x:()=>i});var t=n(6540);const s={},r=t.createContext(s);function a(e){const o=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(o):{...o,...e}},[o,e])}function i(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(r.Provider,{value:o},e.children)}}}]);