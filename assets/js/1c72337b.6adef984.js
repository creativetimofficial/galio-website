"use strict";(self.webpackChunkgalio=self.webpackChunkgalio||[]).push([[605],{633:(e,n,c)=>{c.r(n),c.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>a,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"components/checkbox","title":"Checkbox","description":"Learn how to use the Checkbox component in your React Native applications with Galio Framework.","source":"@site/docs/components/checkbox.mdx","sourceDirName":"components","slug":"/components/checkbox","permalink":"/docs/components/checkbox","draft":false,"unlisted":false,"editUrl":"https://github.com/galio-org/galio-org.github.io/tree/main/docs/components/checkbox.mdx","tags":[],"version":"current","frontMatter":{"title":"Checkbox","description":"Learn how to use the Checkbox component in your React Native applications with Galio Framework.","keywords":["Checkbox","Checkbox - Documentation"],"source_url":"/docs/components/checkbox"},"sidebar":"tutorialSidebar","previous":{"title":"Accordion","permalink":"/docs/components/accordion"},"next":{"title":"Radio Button","permalink":"/docs/components/radio"}}');var t=c(4848),o=c(8453);const r={title:"Checkbox",description:"Learn how to use the Checkbox component in your React Native applications with Galio Framework.",keywords:["Checkbox","Checkbox - Documentation"],source_url:"/docs/components/checkbox"},l=void 0,i={},d=[{value:"React Native Checkbox Component",id:"react-native-checkbox-component",level:2},{value:"Usage",id:"usage",level:3},{value:"Props",id:"props",level:3}];function h(e){const n={code:"code",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"react-native-checkbox-component",children:"React Native Checkbox Component"}),"\n",(0,t.jsx)(n.p,{children:"Checkboxes allow users to complete tasks that involve making choices such as selecting options, or switching settings on or off. Using the onChange function will enable you to call a function when the state value changes, so basically whenever the user is tapping the Checkbox."}),"\n",(0,t.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.p,{children:"Imports:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"import { Checkbox } from 'galio-framework';\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Checkbox",src:c(5343).A+"",width:"394",height:"387"})}),"\n",(0,t.jsx)(n.p,{children:"Basic examples:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:'<Checkbox color="primary" label="Primary Checkbox" />\n<Checkbox color="info" label="Info Checkbox" />\n<Checkbox color="error" label="Error Checkbox" />\n<Checkbox color="warning" label="Warning Checkbox" />\n<Checkbox color="success" label="Success Checkbox" />\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Checkbox",src:c(5287).A+"",width:"394",height:"446"})}),"\n",(0,t.jsx)(n.p,{children:"Advanced examples:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:'<Checkbox color="primary" flexDirection="row-reverse" label="row-reverse checkbox" />\n<Checkbox color="info" initialValue={true} label="initialValue set to true" />\n<Checkbox color="error" initialValue={true} label="different icon" iconFamily="font-awesome" iconName="plane" />\n<Checkbox color="warning" labelStyle={{ color: \'#FF9C09\' }} label="labelStyle used here" />\n<Checkbox color="success" image="https://images.unsplash.com/photo-1569780655478-ecffea4c165c?ixlib=rb-1.2.1" flexDirection="column-reverse"/>\n'})}),"\n",(0,t.jsx)(n.p,{children:"Modern usage with hooks:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:'const [isChecked, setIsChecked] = useState(false);\n\n<Checkbox \n  color="warning" \n  value={isChecked}\n  onChange={setIsChecked} \n  label="onChange is here" \n/>\n'})}),"\n",(0,t.jsx)(n.h3,{id:"props",children:"Props"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Prop"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Default"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"label"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"null"}),(0,t.jsx)(n.td,{children:"Checkbox label text"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"color"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"'primary'"}),(0,t.jsx)(n.td,{children:"Checkbox color"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"value"})}),(0,t.jsx)(n.td,{children:"bool"}),(0,t.jsx)(n.td,{children:"false"}),(0,t.jsx)(n.td,{children:"Controlled checkbox value"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"onChange"})}),(0,t.jsx)(n.td,{children:"function"}),(0,t.jsx)(n.td,{children:"null"}),(0,t.jsx)(n.td,{children:"Callback when checkbox state changes"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"initialValue"})}),(0,t.jsx)(n.td,{children:"bool"}),(0,t.jsx)(n.td,{children:"false"}),(0,t.jsx)(n.td,{children:"Initial checkbox value"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"disabled"})}),(0,t.jsx)(n.td,{children:"bool"}),(0,t.jsx)(n.td,{children:"false"}),(0,t.jsx)(n.td,{children:"Disables the checkbox"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"flexDirection"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"'row'"}),(0,t.jsx)(n.td,{children:"Layout direction: 'row', 'row-reverse', 'column', 'column-reverse'"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"iconName"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"null"}),(0,t.jsx)(n.td,{children:"Custom icon name"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"iconFamily"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"null"}),(0,t.jsx)(n.td,{children:"Custom icon family"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"image"})}),(0,t.jsx)(n.td,{children:"string"}),(0,t.jsx)(n.td,{children:"null"}),(0,t.jsx)(n.td,{children:"Custom image URL"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"checkboxStyle"})}),(0,t.jsx)(n.td,{children:"object"}),(0,t.jsx)(n.td,{children:"null"}),(0,t.jsx)(n.td,{children:"Custom checkbox styles"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"labelStyle"})}),(0,t.jsx)(n.td,{children:"object"}),(0,t.jsx)(n.td,{children:"null"}),(0,t.jsx)(n.td,{children:"Custom label styles"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"containerStyle"})}),(0,t.jsx)(n.td,{children:"object"}),(0,t.jsx)(n.td,{children:"null"}),(0,t.jsx)(n.td,{children:"Custom container styles"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"style"})}),(0,t.jsx)(n.td,{children:"object"}),(0,t.jsx)(n.td,{children:"null"}),(0,t.jsx)(n.td,{children:"Custom styles"})]})]})]})]})}function a(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},5287:(e,n,c)=>{c.d(n,{A:()=>s});const s=c.p+"assets/images/checkbox_advanced-c280a508c43767d97cb5363f2e0ae687.png"},5343:(e,n,c)=>{c.d(n,{A:()=>s});const s=c.p+"assets/images/checkbox_simple-09bcd1242dc8d0be709e0b950a1ac07f.png"},8453:(e,n,c)=>{c.d(n,{R:()=>r,x:()=>l});var s=c(6540);const t={},o=s.createContext(t);function r(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);